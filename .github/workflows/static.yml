# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages


  # <!DOCTYPE html><html lang="$1en"> <head> <title>$2</title> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width initial-scale=1"> <link href="$3css/style.css" rel="stylesheet"></head> <body>$4</body></html>

<i>$1</i>$2Runs on pushes targeting the default branch 

  1/Today'sData<title> </haed> <body> <body> </body> </body> rathanaphon29@gmail.com (<head></head>): <!-- Google tag (gtag.js) --> <script async src="https://httpsrathanaphon.Website.co.inhttps://www.googletagmanager.com/gtag/js?id=AW-10919038707 script> <script> window.dataLayer = window.dataLayer || []; gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'AW-10919038707'); </script> https://cdn.a
    # branches: ["@GitHubrathanaphon"]

  # Allows you to run this workflow manually from the Actions tab
   workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
